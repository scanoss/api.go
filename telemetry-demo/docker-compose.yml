version: '3.8'

services:
  # SCANOSS API with telemetry enabled
  scanoss-api:
    build: ..
    ports:
      - "5443:5443"
    environment:
      - OTEL_ENABLED=true
      - OTEL_EXTRA=true
      - OTEL_EXPORTER_OLTP=otel-collector:4317
    volumes:
      - ./config:/app/config
      - ../test-support/scanoss.sh:/usr/local/bin/scanoss:ro
    command: ["-json-config", "/app/config/app-config-demo.json", "-debug"]
    depends_on:
      - otel-collector
    networks:
      - monitoring
    restart: unless-stopped

  # OpenTelemetry Collector - receives metrics from API
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver  
      - "8889:8889"   # Prometheus metrics from collector
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped

  # Prometheus - stores metrics from OTEL collector
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'  
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped

  # Grafana - creates graphs from Prometheus data
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: